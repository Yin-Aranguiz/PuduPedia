{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bianc\\\\curso.python\\\\pudupediaProyecto\\\\pudupedia\\\\Frontend\\\\src\\\\components\\\\LandingPage\\\\LandingPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './LandingPage.css';\nimport Footer from './Footer/Footer';\nimport Infoboxes from './Infoboxes/Infoboxes';\nimport NavBar from './Navbar/NavBar';\nimport Header from './Header/Header';\n\n// importa las imágenes desde la misma carpeta\nimport image1 from './landingpage1.png';\nimport image2 from './landingpage2.png';\nimport image3 from './landingpage3.jpg';\nimport imageTitle from './landingtitle.svg';\n\n// define las imágenes en el array images\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = [image1, image2, image3];\nconst LandingPage = () => {\n  _s();\n  // índice actual, cambio de índice. El índice actual parte de 0\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [isScrolled, setIsScrolled] = useState(false);\n  useEffect(() => {\n    // Una función llamada handleScroll que se ejecutará cada vez que el usuario haga scroll\n    const handleScroll = () => {\n      // Cambia el estado isScrolled a true si el usuario ha hecho scroll más de 100px, de lo contrario lo cambia a false\n      setIsScrolled(window.scrollY > 100);\n    };\n    // Se añade un event listener al evento 'scroll' del objeto window. \n    // Esto significa que cada vez que el usuario haga scroll, se ejecutará la función handleScroll\n    window.addEventListener('scroll', handleScroll);\n\n    // Función de limpieza que se ejecutará cuando el componente se desmonte.\n    // Elimina el event listener para evitar posibles problemas de rendimiento o errores\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n  // El array vacío [] significa que este efecto solo se ejecutará una vez\n\n  // useEffect se encarga de configurar y limpiar el intervalo\n  useEffect(() => {\n    if (!isScrolled) {\n      const interval = setInterval(() => {\n        setCurrentImageIndex(prevIndex => (prevIndex + 1) % images.length); // el índice vuelve a 0 después de llegar al final de la lista\n        // El índice comienza en 0 y aumenta con el tiempo para mostrar la siguiente imagen.\n        // el nuevo índice debe dar módulo 0 con la longitud de las imágenes para no pasarse a índices que no existen\n      }, 3000); // Cambia la imagen cada 3 segundos (3000ms)\n\n      return () => clearInterval(interval); // Limpia el intervalo cuando el componente se desmonte\n    }\n  }, [isScrolled]);\n  const handleDotClick = index => {\n    setCurrentImageIndex(index);\n    // Cambia la imagen al índice del punto clicado\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"landing-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      //section-1\n      className: \"background-image\",\n      style: {\n        backgroundImage: `url(${images[isScrolled ? 0 : currentImageIndex]})`\n      }\n      // la imagen de fondo es la que tenga el índice actual\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageTitle,\n        alt: \"title\",\n        className: \"title-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dots-container\",\n        children: images.map((_, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `dot ${currentImageIndex === index ? 'active' : ''}`,\n          onClick: () => handleDotClick(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image2,\n        alt: \"image2\",\n        className: \"static-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Infoboxes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(LandingPage, \"bXKw05GBNAAG8cAb5Y3fqKCju+I=\");\n_c = LandingPage;\nexport default LandingPage;\nvar _c;\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"names":["React","useState","useEffect","Footer","Infoboxes","NavBar","Header","image1","image2","image3","imageTitle","jsxDEV","_jsxDEV","images","LandingPage","_s","currentImageIndex","setCurrentImageIndex","isScrolled","setIsScrolled","handleScroll","window","scrollY","addEventListener","removeEventListener","interval","setInterval","prevIndex","length","clearInterval","handleDotClick","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundImage","src","alt","map","_","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bianc/curso.python/pudupediaProyecto/pudupedia/Frontend/src/components/LandingPage/LandingPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './LandingPage.css';\r\nimport Footer from './Footer/Footer';\r\nimport Infoboxes from './Infoboxes/Infoboxes';\r\nimport NavBar from './Navbar/NavBar';\r\nimport Header from './Header/Header';\r\n\r\n// importa las imágenes desde la misma carpeta\r\nimport image1 from './landingpage1.png';\r\nimport image2 from './landingpage2.png';\r\nimport image3 from './landingpage3.jpg';\r\nimport imageTitle from './landingtitle.svg';\r\n\r\n\r\n\r\n// define las imágenes en el array images\r\nconst images = [\r\n  image1,\r\n  image2,\r\n  image3\r\n];\r\n\r\nconst LandingPage = () => {\r\n  // índice actual, cambio de índice. El índice actual parte de 0\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n  const [isScrolled, setIsScrolled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Una función llamada handleScroll que se ejecutará cada vez que el usuario haga scroll\r\n    const handleScroll = () => {\r\n      // Cambia el estado isScrolled a true si el usuario ha hecho scroll más de 100px, de lo contrario lo cambia a false\r\n      setIsScrolled(window.scrollY > 100);\r\n    };\r\n    // Se añade un event listener al evento 'scroll' del objeto window. \r\n    // Esto significa que cada vez que el usuario haga scroll, se ejecutará la función handleScroll\r\n    window.addEventListener('scroll', handleScroll);\r\n  \r\n    // Función de limpieza que se ejecutará cuando el componente se desmonte.\r\n    // Elimina el event listener para evitar posibles problemas de rendimiento o errores\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n  // El array vacío [] significa que este efecto solo se ejecutará una vez\r\n  \r\n  // useEffect se encarga de configurar y limpiar el intervalo\r\n  useEffect(() => {\r\n    if (!isScrolled) {\r\n      const interval = setInterval(() => {\r\n        setCurrentImageIndex((prevIndex) => (prevIndex + 1) % images.length); // el índice vuelve a 0 después de llegar al final de la lista\r\n        // El índice comienza en 0 y aumenta con el tiempo para mostrar la siguiente imagen.\r\n        // el nuevo índice debe dar módulo 0 con la longitud de las imágenes para no pasarse a índices que no existen\r\n      }, 3000); // Cambia la imagen cada 3 segundos (3000ms)\r\n\r\n      return () => clearInterval(interval); // Limpia el intervalo cuando el componente se desmonte\r\n    }\r\n  }, [isScrolled]);\r\n\r\n  const handleDotClick = (index) => {\r\n    setCurrentImageIndex(index);\r\n    // Cambia la imagen al índice del punto clicado\r\n  };\r\n\r\n  return (\r\n    <div className=\"landing-page\"> \r\n      <Header />\r\n      <div //section-1\r\n        className=\"background-image\"\r\n        style={{ backgroundImage: `url(${images[isScrolled ? 0 : currentImageIndex]})` }}\r\n        // la imagen de fondo es la que tenga el índice actual\r\n      >\r\n        <img src={imageTitle} alt='title' className='title-image' />\r\n\r\n        <div className=\"dots-container\">\r\n          {images.map((_, index) => (\r\n            <span\r\n              key={index}\r\n              className={`dot ${currentImageIndex === index ? 'active' : ''}`}\r\n              onClick={() => handleDotClick(index)}\r\n            />\r\n          ))}\r\n        </div>\r\n        {/* Añadido el contenedor de puntos */}\r\n      </div>\r\n      <NavBar />\r\n      <div className=\"section section-2\">\r\n        <img src={image2} alt='image2' className='static-image' />\r\n        <Infoboxes />\r\n        <Footer />\r\n      </div> \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}