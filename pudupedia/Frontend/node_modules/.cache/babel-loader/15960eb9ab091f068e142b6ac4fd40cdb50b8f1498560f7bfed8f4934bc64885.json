{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bianc\\\\curso.python\\\\pudupediaProyecto\\\\pudupedia\\\\Frontend\\\\src\\\\components\\\\LoginPage\\\\UserProfile\\\\testPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Form from './SeenForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const [formType, setFormType] = useState('');\n  const handleButtonClick = type => {\n    setFormType(type);\n  };\n  const handleFormSubmit = async formData => {\n    try {\n      let url;\n      if (formType === 'animal') url = '/api/animals_seen';else if (formType === 'plant') url = '/api/plants_seen';else if (formType === 'park') url = '/api/parks_visited';\n      const userId = localStorage.getItem('userId'); // Obtener el ID del usuario desde el localStorage\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: userId,\n          ...formData // Incluir datos del formulario\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error en la solicitud');\n      }\n      const result = await response.json();\n      console.log(`Datos enviados para ${formType}:`, result);\n    } catch (error) {\n      console.error('Error al enviar los datos:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Perfil del Usuario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleButtonClick('animal'),\n      children: \"A\\xF1adir Animal Visto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleButtonClick('plant'),\n      children: \"A\\xF1adir Planta Vista\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleButtonClick('park'),\n      children: \"A\\xF1adir Parque Visitado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), formType && /*#__PURE__*/_jsxDEV(Form, {\n      type: formType,\n      onSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n};\n_s(ProfilePage, \"ichotsWjfmX1Rs2EOcW87UL4sVA=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","Form","jsxDEV","_jsxDEV","ProfilePage","_s","formType","setFormType","handleButtonClick","type","handleFormSubmit","formData","url","userId","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","user_id","ok","Error","result","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/bianc/curso.python/pudupediaProyecto/pudupedia/Frontend/src/components/LoginPage/UserProfile/testPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Form from './SeenForm'; \r\n\r\nconst ProfilePage = () => {\r\n    const [formType, setFormType] = useState('');\r\n  \r\n    const handleButtonClick = (type) => {\r\n      setFormType(type);\r\n    };\r\n  \r\n    const handleFormSubmit = async (formData) => {\r\n      try {\r\n        let url;\r\n        if (formType === 'animal') url = '/api/animals_seen';\r\n        else if (formType === 'plant') url = '/api/plants_seen';\r\n        else if (formType === 'park') url = '/api/parks_visited';\r\n  \r\n        const userId = localStorage.getItem('userId'); // Obtener el ID del usuario desde el localStorage\r\n        const response = await fetch(url, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            user_id: userId,\r\n            ...formData, // Incluir datos del formulario\r\n          }),\r\n        });\r\n  \r\n        if (!response.ok) {\r\n          throw new Error('Error en la solicitud');\r\n        }\r\n  \r\n        const result = await response.json();\r\n        console.log(`Datos enviados para ${formType}:`, result);\r\n  \r\n      } catch (error) {\r\n        console.error('Error al enviar los datos:', error);\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <h1>Perfil del Usuario</h1>\r\n  \r\n        <button onClick={() => handleButtonClick('animal')}>Añadir Animal Visto</button>\r\n        <button onClick={() => handleButtonClick('plant')}>Añadir Planta Vista</button>\r\n        <button onClick={() => handleButtonClick('park')}>Añadir Parque Visitado</button>\r\n  \r\n        {formType && (\r\n          <Form type={formType} onSubmit={handleFormSubmit} />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default ProfilePage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMQ,iBAAiB,GAAIC,IAAI,IAAK;IAClCF,WAAW,CAACE,IAAI,CAAC;EACnB,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IAC3C,IAAI;MACF,IAAIC,GAAG;MACP,IAAIN,QAAQ,KAAK,QAAQ,EAAEM,GAAG,GAAG,mBAAmB,CAAC,KAChD,IAAIN,QAAQ,KAAK,OAAO,EAAEM,GAAG,GAAG,kBAAkB,CAAC,KACnD,IAAIN,QAAQ,KAAK,MAAM,EAAEM,GAAG,GAAG,oBAAoB;MAExD,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;MAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAE;QAChCM,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,OAAO,EAAEV,MAAM;UACf,GAAGF,QAAQ,CAAE;QACf,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACK,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MAEA,MAAMC,MAAM,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAAC,uBAAuBvB,QAAQ,GAAG,EAAEoB,MAAM,CAAC;IAEzD,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,oBACE3B,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE3BhC,OAAA;MAAQiC,OAAO,EAAEA,CAAA,KAAM5B,iBAAiB,CAAC,QAAQ,CAAE;MAAAuB,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChFhC,OAAA;MAAQiC,OAAO,EAAEA,CAAA,KAAM5B,iBAAiB,CAAC,OAAO,CAAE;MAAAuB,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/EhC,OAAA;MAAQiC,OAAO,EAAEA,CAAA,KAAM5B,iBAAiB,CAAC,MAAM,CAAE;MAAAuB,QAAA,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEhF7B,QAAQ,iBACPH,OAAA,CAACF,IAAI;MAACQ,IAAI,EAAEH,QAAS;MAAC+B,QAAQ,EAAE3B;IAAiB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACpD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAnDED,WAAW;AAAAkC,EAAA,GAAXlC,WAAW;AAqDf,eAAeA,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}