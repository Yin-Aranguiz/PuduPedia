{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bianc\\\\curso.python\\\\pudupediaProyecto\\\\pudupedia\\\\Frontend\\\\src\\\\components\\\\LoginPage\\\\signlog\\\\resetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setError('Las contraseñas no coinciden.');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:3001/reset-password/${token}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password\n        })\n      });\n      if (response.ok) {\n        setSuccess(true);\n        setError('');\n      } else {\n        const errorData = await response.json();\n        setSuccess(false);\n        setError(errorData.message || 'Error al restablecer la contraseña.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setSuccess(false);\n      setError('Error en el servidor. Intenta nuevamente.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Restablecer Contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Nueva Contrase\\xF1a\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirmar Contrase\\xF1a\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Restablecer Contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Contrase\\xF1a restablecida exitosamente. Puedes iniciar sesi\\xF3n con tu nueva contrase\\xF1a.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"/afuOWKqbscgKkNOLLWDG0woJv8=\", false, function () {\n  return [useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useParams","jsxDEV","_jsxDEV","ResetPassword","_s","token","password","setPassword","confirmPassword","setConfirmPassword","success","setSuccess","error","setError","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","message","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","style","color","_c","$RefreshReg$"],"sources":["C:/Users/bianc/curso.python/pudupediaProyecto/pudupedia/Frontend/src/components/LoginPage/signlog/resetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ResetPassword = () => {\r\n    const { token } = useParams();\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setError('Las contraseñas no coinciden.');\r\n            return;\r\n        }\r\n        try {\r\n            const response = await fetch(`http://localhost:3001/reset-password/${token}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ password }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                setSuccess(true);\r\n                setError('');\r\n            } else {\r\n                const errorData = await response.json();\r\n                setSuccess(false);\r\n                setError(errorData.message || 'Error al restablecer la contraseña.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setSuccess(false);\r\n            setError('Error en el servidor. Intenta nuevamente.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Restablecer Contraseña</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Nueva Contraseña\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirmar Contraseña\"\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Restablecer Contraseña</button>\r\n            </form>\r\n            {success && <p>Contraseña restablecida exitosamente. Puedes iniciar sesión con tu nueva contraseña.</p>}\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}