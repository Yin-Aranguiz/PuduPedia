{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lorenzo\\\\Desktop\\\\pudupedia\\\\PuduPedia\\\\pudupedia\\\\src\\\\components\\\\LandingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './LandingPage.css';\nimport Footer from './Footer';\nimport Infoboxes from './Infoboxes';\nimport NavBar from './NavBar';\n\n// importa las imágenes desde la misma carpeta\nimport image1 from './landingpage1.png';\nimport image2 from './landingpage2.jpg';\nimport image3 from './landingpage3.jpg';\nimport imageTitle from './landingtitle.svg';\n\n// define las imágenes en el array images\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = [image1, image2, image3];\nconst LandingPage = () => {\n  _s();\n  // índice actual, cambio de índice. El índice actual parte de 0\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n\n  // useEffect se encarga de configurar y limpiar el intervalo (sin esto, las imágenes cambian muy rápido, pero aún no lo entiendo al 100%)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentImageIndex(prevIndex => (prevIndex + 1) % images.length); // el índice vuelve a 0 después de llegar al final de la lista\n      // El índice comienza en 0 y aumenta con el tiempo para mostrar la siguiente imagen.\n      // el nuevo índice debe dar módulo 0 con la logintud de las imágenes para no pasarse a índices que no existen\n    }, 3000); // Cambia la imagen cada 3 segundos (3000ms)\n\n    return () => clearInterval(interval); // Limpia el intervalo cuando el componente se desmonte\n  }, []); // El array vacío [] asegura que el efecto solo se ejecute una vez\n\n  const handleNextImage = () => {\n    setCurrentImageIndex(prevIndex => (prevIndex + 1) % images.length);\n    // para presionar el botón, pasa lo mismo que en el intervalo cada 3 segundos, se cambia la imagen según el índice\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"landing-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      //section-1\n      className: \"background-image\",\n      style: {\n        backgroundImage: `url(${images[currentImageIndex]})`\n      }\n      // la imagen de fondo es la que tenga el índice actual\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageTitle,\n        alt: \"title\",\n        className: \"title-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-button\",\n        onClick: handleNextImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image2,\n        alt: \"image2\",\n        className: \"static-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Infoboxes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image3,\n        alt: \"image3\",\n        className: \"static-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(LandingPage, \"iwdYV/csWqs0gMEM0R8yiwCHnVs=\");\n_c = LandingPage;\nexport default LandingPage;\nvar _c;\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"names":["React","useState","useEffect","Footer","Infoboxes","NavBar","image1","image2","image3","imageTitle","jsxDEV","_jsxDEV","images","LandingPage","_s","currentImageIndex","setCurrentImageIndex","interval","setInterval","prevIndex","length","clearInterval","handleNextImage","className","children","style","backgroundImage","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lorenzo/Desktop/pudupedia/PuduPedia/pudupedia/src/components/LandingPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './LandingPage.css';\r\nimport Footer from './Footer';\r\nimport Infoboxes from './Infoboxes';\r\nimport NavBar from './NavBar';\r\n\r\n\r\n// importa las imágenes desde la misma carpeta\r\nimport image1 from './landingpage1.png';\r\nimport image2 from './landingpage2.jpg';\r\nimport image3 from './landingpage3.jpg';\r\nimport imageTitle from './landingtitle.svg';\r\n\r\n\r\n\r\n// define las imágenes en el array images\r\nconst images = [\r\n  image1,\r\n  image2,\r\n  image3,\r\n];\r\n\r\nconst LandingPage = () => {\r\n  // índice actual, cambio de índice. El índice actual parte de 0\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n\r\n  // useEffect se encarga de configurar y limpiar el intervalo (sin esto, las imágenes cambian muy rápido, pero aún no lo entiendo al 100%)\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentImageIndex((prevIndex) => (prevIndex + 1) % images.length); // el índice vuelve a 0 después de llegar al final de la lista\r\n      // El índice comienza en 0 y aumenta con el tiempo para mostrar la siguiente imagen.\r\n      // el nuevo índice debe dar módulo 0 con la logintud de las imágenes para no pasarse a índices que no existen\r\n    }, 3000); // Cambia la imagen cada 3 segundos (3000ms)\r\n\r\n    return () => clearInterval(interval); // Limpia el intervalo cuando el componente se desmonte\r\n  }, []);  // El array vacío [] asegura que el efecto solo se ejecute una vez\r\n\r\n  const handleNextImage = () => {\r\n    setCurrentImageIndex((prevIndex) => (prevIndex + 1) % images.length);\r\n    // para presionar el botón, pasa lo mismo que en el intervalo cada 3 segundos, se cambia la imagen según el índice\r\n    \r\n  };\r\n\r\n  return (\r\n    <div className=\"landing-page\">\r\n      <div //section-1\r\n        className=\"background-image\"\r\n        style={{ backgroundImage: `url(${images[currentImageIndex]})` }}\r\n        // la imagen de fondo es la que tenga el índice actual\r\n      >\r\n        <img src={imageTitle} alt='title' className='title-image' />\r\n        <button className=\"next-button\" onClick={handleNextImage}></button>\r\n        <NavBar/>\r\n      </div>\r\n      <div className=\"section section-2\">\r\n        <img src={image2} alt='image2' className='static-image' />\r\n        <Infoboxes/>\r\n      </div>\r\n      <div className=\"section section-3\">\r\n        <img src={image3} alt='image3' className='static-image' /> \r\n        <Footer/>\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\n\r\nexport default LandingPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,mBAAmB;AAC1B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,MAAM,MAAM,UAAU;;AAG7B;AACA,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,UAAU,MAAM,oBAAoB;;AAI3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAG,CACbN,MAAM,EACNC,MAAM,EACNC,MAAM,CACP;AAED,MAAMK,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;;EAE7D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMe,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCF,oBAAoB,CAAEG,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIP,MAAM,CAACQ,MAAM,CAAC,CAAC,CAAC;MACtE;MACA;IACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAMC,aAAa,CAACJ,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC5BN,oBAAoB,CAAEG,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIP,MAAM,CAACQ,MAAM,CAAC;IACpE;EAEF,CAAC;EAED,oBACET,OAAA;IAAKY,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3Bb,OAAA;MAAK;MACHY,SAAS,EAAC,kBAAkB;MAC5BE,KAAK,EAAE;QAAEC,eAAe,EAAE,OAAOd,MAAM,CAACG,iBAAiB,CAAC;MAAI;MAC9D;MAAA;MAAAS,QAAA,gBAEAb,OAAA;QAAKgB,GAAG,EAAElB,UAAW;QAACmB,GAAG,EAAC,OAAO;QAACL,SAAS,EAAC;MAAa;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5DrB,OAAA;QAAQY,SAAS,EAAC,aAAa;QAACU,OAAO,EAAEX;MAAgB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACnErB,OAAA,CAACN,MAAM;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNrB,OAAA;MAAKY,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCb,OAAA;QAAKgB,GAAG,EAAEpB,MAAO;QAACqB,GAAG,EAAC,QAAQ;QAACL,SAAS,EAAC;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1DrB,OAAA,CAACP,SAAS;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACNrB,OAAA;MAAKY,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCb,OAAA;QAAKgB,GAAG,EAAEnB,MAAO;QAACoB,GAAG,EAAC,QAAQ;QAACL,SAAS,EAAC;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1DrB,OAAA,CAACR,MAAM;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGV,CAAC;AAAClB,EAAA,CA3CID,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AA8CjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}